const fs = global.nodemodule["fs-extra"];
const path = global.nodemodule["path"];
const axios = global.nodemodule["axios"];
const Canvas = global.nodemodule["canvas"];

module.exports.config = {
  name: "leavenoti",
  version: "3.0.0",
  credits: "Saiful Islam (Hybrid Edition Final)",
  description: "Send different farewell messages when someone leaves or gets removed from the group",
  eventType: ["log:unsubscribe"],
  dependencies: {
    "canvas": "",
    "axios": "",
    "fs-extra": "",
    "path": ""
  }
};

module.exports.run = async function ({ api, event, Users, Threads }) {
  const { threadID } = event;
  const leftID = event.logMessageData.leftParticipantFbId;

  if (!leftID) return;
  if (leftID == api.getCurrentUserID()) return; // if bot left

  // Thread info
  const threadInfo = await api.getThreadInfo(threadID);
  const userName = global.data.userName.get(leftID) || await Users.getNameUser(leftID);
  const memberCount = threadInfo.participantIDs.length;
  const groupName = threadInfo.threadName;

  // Get thread data
  const data = global.data.threadData.get(parseInt(threadID)) || (await Threads.getData(threadID)).data;

  // =========================
  // ====== TEXT SYSTEM ======
  // =========================
  let type, caption;

  if (event.author == leftID) {
    // === Member left by themselves ===
    type = "üò¢ ‡¶∏‡ßç‡¶¨‡ßá‡¶ö‡ßç‡¶õ‡¶æ‡¶Ø‡¶º ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶§‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá‡¶õ‡ßá!";
    caption = 
`‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí¨ ùêïùêéùêãùêîùêçùêìùêÄùêëùêò ùêãùêÑùêÄùêïùêÑ üí¨
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üë§ ‡¶®‡¶æ‡¶Æ : ${userName}
üè∑Ô∏è ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ : ${groupName}
üë• ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ : ${memberCount}
üì§ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ : ‡¶§‡¶ø‡¶®‡¶ø ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶á‡¶ö‡ßç‡¶õ‡¶æ‡ßü ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶§‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶® üòî
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üå∏ ‡¶ï‡¶ñ‡¶®‡¶ì ‡¶ï‡¶ñ‡¶®‡¶ì ‡¶ö‡ßÅ‡¶™‡¶ö‡¶æ‡¶™ ‡¶¨‡¶ø‡¶¶‡¶æ‡¶Ø‡¶º‡¶á ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶∂‡¶æ‡¶®‡ßç‡¶§ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® üå∏  
‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶á‡¶≤ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶®‡ßç‡¶§‡¶∞‡¶ø‡¶ï ‡¶∂‡ßÅ‡¶≠‡¶ï‡¶æ‡¶Æ‡¶®‡¶æ üíê  
‡¶Ü‡¶∂‡¶æ ‡¶ï‡¶∞‡¶ø ‡¶è‡¶ï‡¶¶‡¶ø‡¶® ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá üíå
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìú ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ üìú  
1Ô∏è‚É£ ‡¶∏‡¶¶‡ßç‡¶Ø ‡¶¨‡¶ø‡¶¶‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡¶ï‡ßá ‡¶∂‡ßÅ‡¶≠‡¶ï‡¶æ‡¶Æ‡¶®‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶â‡¶ö‡¶ø‡¶§ üëã  
2Ô∏è‚É£ ‡¶ï‡ßá‡¶â ‡¶Ø‡ßá‡¶® ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£‡¶æ‡¶§‡ßç‡¶Æ‡¶ï ‡¶Æ‡¶®‡ßç‡¶§‡¶¨‡ßç‡¶Ø ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‚ùå  
3Ô∏è‚É£ ‡¶∏‡¶¨‡¶æ‡¶á ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶∂‡¶æ‡¶®‡ßç‡¶§‡¶ø ‡¶¨‡¶ú‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶® üåø  
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ïî‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïó
 üëë ùêÅùê®ùê≠ ùêéùê∞ùêßùêûùê´: ùêíùêöùê¢ùêüùêÆùê• ùêàùê¨ùê•ùêöùê¶  
‚ïö‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïù
`;
  } 
  else {
    // === Removed by Admin ===
    type = "‚ö†Ô∏è ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶∞‡ßç‡¶§‡ßÉ‡¶ï ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!";
    caption = 
`‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üíî ùêëùêÑùêåùêéùêïùêÑùêÉ ùêÅùêò ùêÄùêÉùêåùêàùêç üíî
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üë§ ‡¶®‡¶æ‡¶Æ : ${userName}
üè∑Ô∏è ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ : ${groupName}
üë• ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ : ${memberCount}
‚ö†Ô∏è ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ : ${type}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üåô ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶¨‡¶ø‡¶¶‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶™‡ßá‡¶õ‡¶®‡ßá ‡¶•‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ‡¶ñ‡¶æ‡¶®‡¶ø ‡¶ó‡¶≤‡ßç‡¶™...  
‡¶π‡¶Ø‡¶º‡¶§‡ßã ‡¶≠‡ßÅ‡¶≤ ‡¶¨‡ßã‡¶ù‡¶æ‡¶¨‡ßÅ‡¶ù‡¶ø, ‡¶π‡¶Ø‡¶º‡¶§‡ßã ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶ó‡¶ø‡¶¶‡•§  
‡¶§‡¶¨‡ßÅ‡¶ì ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∂‡ßÅ‡¶≠ ‡¶ï‡¶æ‡¶Æ‡¶®‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶á üí´  
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìú ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶Ü‡¶ö‡¶∞‡¶£‡¶¨‡¶ø‡¶ß‡¶ø üìú  
1Ô∏è‚É£ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶∏‡¶ø‡¶¶‡ßç‡¶ß‡¶æ‡¶®‡ßç‡¶§‡¶ï‡ßá ‡¶∏‡¶Æ‡ßç‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® üôè  
2Ô∏è‚É£ ‡¶ï‡ßã‡¶®‡ßã ‡¶®‡ßá‡¶§‡¶ø‡¶¨‡¶æ‡¶ö‡¶ï ‡¶Æ‡¶®‡ßç‡¶§‡¶¨‡ßç‡¶Ø ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶ø‡¶∞‡¶§ ‡¶•‡¶æ‡¶ï‡ßÅ‡¶® ‚ùå  
3Ô∏è‚É£ ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂ ‡¶¨‡¶ú‡¶æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶® üåø  
4Ô∏è‚É£ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶∂‡ßá‡¶∑ ‡¶®‡¶Ø‡¶º, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶¨‡¶ø‡¶∞‡¶§‡¶ø ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ üíå  
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ïî‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïó
 üëë ùêÅùê®ùê≠ ùêéùê∞ùêßùêûùê´: ùêíùêöùê¢ùêüùêÆùê• ùêàùê¨ùê•ùêöùê¶  
‚ïö‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïù`;
  }

  // Custom message (if user set)
  let msg = (typeof data.customLeave == "undefined")
    ? "{name} {type}"
    : data.customLeave;
  msg = msg.replace(/\{name}/g, userName).replace(/\{type}/g, type);

  // =========================
  // ===== IMAGE SETUP =======
  // =========================
  const bgURL = "https://i.postimg.cc/rmkVVbsM/r07qxo-R-Download.jpg";
  const avatarURL = `https://graph.facebook.com/${leftID}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`;

  const cacheDir = path.join(__dirname, "cache");
  fs.ensureDirSync(cacheDir);

  const bgPath = path.join(cacheDir, "leave_bg.jpg");
  const avatarPath = path.join(cacheDir, `avt_${leftID}.png`);
  const outPath = path.join(cacheDir, `leave_${leftID}.png`);

  try {
    // Download background & avatar
    const bgImg = (await axios.get(bgURL, { responseType: "arraybuffer" })).data;
    fs.writeFileSync(bgPath, Buffer.from(bgImg));
    const avatarImg = (await axios.get(avatarURL, { responseType: "arraybuffer" })).data;
    fs.writeFileSync(avatarPath, Buffer.from(avatarImg));

    // Canvas draw
    const canvas = Canvas.createCanvas(800, 500);
    const ctx = canvas.getContext("2d");
    const background = await Canvas.loadImage(bgPath);
    ctx.drawImage(background, 0, 0, canvas.width, canvas.height);

    const avatarSize = 180;
    const avatarX = (canvas.width - avatarSize) / 2;
    const avatarY = 100;

    // Avatar circle
    ctx.beginPath();
    ctx.arc(avatarX + avatarSize / 2, avatarY + avatarSize / 2, avatarSize / 2 + 8, 0, Math.PI * 2, false);
    ctx.fillStyle = "#fff";
    ctx.fill();

    const avatar = await Canvas.loadImage(avatarPath);
    ctx.save();
    ctx.beginPath();
    ctx.arc(avatarX + avatarSize / 2, avatarY + avatarSize / 2, avatarSize / 2, 0, Math.PI * 2, true);
    ctx.closePath();
    ctx.clip();
    ctx.drawImage(avatar, avatarX, avatarY, avatarSize, avatarSize);
    ctx.restore();

    // Text on image
    ctx.textAlign = "center";
    ctx.font = "bold 36px Arial";
    ctx.fillStyle = "#FF6347";
    ctx.fillText(userName, canvas.width / 2, avatarY + avatarSize + 50);

    ctx.font = "bold 30px Arial";
    ctx.fillStyle = "#00FFFF";
    ctx.fillText(groupName, canvas.width / 2, avatarY + avatarSize + 90);

    ctx.font = "bold 26px Arial";
    ctx.fillStyle = "#FFFF00";
    ctx.fillText(`‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ${memberCount} ‡¶ú‡¶® üëã`, canvas.width / 2, avatarY + avatarSize + 130);

    ctx.font = "bold 20px Arial";
    ctx.fillStyle = "#FF69B4";
    ctx.fillText(`Bot Owner: Saiful Islam üíª`, canvas.width / 2, canvas.height - 30);

    fs.writeFileSync(outPath, canvas.toBuffer());

    // Send message
    api.sendMessage({
      body: caption,
      attachment: fs.createReadStream(outPath)
    }, threadID, () => {
      // cleanup cache
      try {
        fs.unlinkSync(bgPath);
        fs.unlinkSync(avatarPath);
        fs.unlinkSync(outPath);
      } catch (e) { }
    });

  } catch (err) {
    console.error("LeaveNoti Error:", err);
    api.sendMessage("‚öôÔ∏è ‡¶≤‡¶ø‡¶≠ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶æ‡¶á ‡¶Æ‡¶°‡¶ø‡¶â‡¶≤‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‚öôÔ∏è", threadID);
  }
};
