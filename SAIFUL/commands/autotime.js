const moment = require("moment-timezone");
const axios = require("axios");

module.exports.config = {
  name: "autotime",
  version: "9.1.0",
  hasPermssion: 2,
  credits: "Saiful Islam + Modified by GPT-5",
  description: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ì ‡¶π‡¶ø‡¶ú‡¶∞‡¶ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®‡ßá",
  commandCategory: "system",
  usages: "autotime",
  cooldowns: 5,
};

const runningGroups = new Set();

// ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶Æ‡¶æ‡¶∏, ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π
const banglaMonths = ["‡¶¨‡ßà‡¶∂‡¶æ‡¶ñ","‡¶ú‡ßç‡¶Ø‡ßà‡¶∑‡ßç‡¶†","‡¶Ü‡¶∑‡¶æ‡¶¢‡¶º","‡¶∂‡ßç‡¶∞‡¶æ‡¶¨‡¶£","‡¶≠‡¶æ‡¶¶‡ßç‡¶∞","‡¶Ü‡¶∂‡ßç‡¶¨‡¶ø‡¶®","‡¶ï‡¶æ‡¶∞‡ßç‡¶§‡¶ø‡¶ï","‡¶Ö‡¶ó‡ßç‡¶∞‡¶π‡¶æ‡¶Ø‡¶º‡¶£","‡¶™‡ßå‡¶∑","‡¶Æ‡¶æ‡¶ò","‡¶´‡¶æ‡¶≤‡ßç‡¶ó‡ßÅ‡¶®","‡¶ö‡ßà‡¶§‡ßç‡¶∞"];
const banglaWeekdays = ["‡¶∞‡¶¨‡¶ø‡¶¨‡¶æ‡¶∞","‡¶∏‡ßã‡¶Æ‡¶¨‡¶æ‡¶∞","‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤‡¶¨‡¶æ‡¶∞","‡¶¨‡ßÅ‡¶ß‡¶¨‡¶æ‡¶∞","‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø‡¶¨‡¶æ‡¶∞","‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞‡¶¨‡¶æ‡¶∞","‡¶∂‡¶®‡¶ø‡¶¨‡¶æ‡¶∞"];
const banglaDigits = ["‡ß¶","‡ßß","‡ß®","‡ß©","‡ß™","‡ß´","‡ß¨","‡ß≠","‡ßÆ","‡ßØ"];

// ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ï‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞
function toBanglaNumber(num) {
  return num.toString().replace(/\d/g, d => banglaDigits[d]);
}

// GitHub ‡¶•‡ßá‡¶ï‡ßá ‡¶π‡¶ø‡¶ú‡¶∞‡¶ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶®‡ßá)
async function fetchHijriDate(now) {
  try {
    const year = now.year();
    const month = now.month() + 1;
    const day = now.date();
    const url = `https://raw.githubusercontent.com/rummmmna21/rX-/refs/heads/main/arabic-2025-2026.json`;

    const res = await axios.get(url);
    const data = res.data;

    if (data[month] && data[month][day]) {
      const hijri = data[month][day];
      return {
        day: toBanglaNumber(hijri.day),
        month: hijri.month,
        year: toBanglaNumber(hijri.year)
      };
    }
    return { day: "??", month: "??", year: "??" };
  } catch {
    return { day: "??", month: "??", year: "??" };
  }
}

// ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ó‡¶£‡¶®‡¶æ
function getBanglaDate(now) {
  const gYear = now.year();
  const gMonth = now.month() + 1;
  const gDay = now.date();

  let banglaYear = gYear - 593;
  let dayOfYear = moment(now).dayOfYear();
  let pohelaBoishakh = moment(`${gYear}-04-14`).dayOfYear();

  if (dayOfYear < pohelaBoishakh) {
    banglaYear--;
    pohelaBoishakh = moment(`${gYear - 1}-04-14`).dayOfYear();
  }

  let dayCount = dayOfYear - pohelaBoishakh + 1;
  if (dayCount <= 0) dayCount += moment(`${gYear}-12-31`).dayOfYear();

  const monthLengths = [31,31,31,31,31,30,30,30,30,30,30,30];
  let monthIndex = 0;
  while (dayCount > monthLengths[monthIndex]) {
    dayCount -= monthLengths[monthIndex];
    monthIndex = (monthIndex + 1) % 12;
  }

  return {
    day: toBanglaNumber(dayCount),
    month: banglaMonths[monthIndex],
    year: toBanglaNumber(banglaYear),
    weekday: banglaWeekdays[now.day()]
  };
}

// ‡¶∏‡¶Æ‡ßü ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
async function sendTime(api, threadID) {
  if (!runningGroups.has(threadID)) return;

  const timeZone = "Asia/Dhaka";
  const now = moment().tz(timeZone);
  const time = now.format("hh:mm A");
  const englishDate = now.format("dddd, DD MMMM YYYY");

  const bangla = getBanglaDate(now);
  const hijri = await fetchHijriDate(now);

  const msg = `
‚ïî‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïó
 ‚è∞ ùóßùóúùó†ùóò & ùóóùóîùóßùóò ‚è∞
‚ïö‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïù
       ‚ïî‚ïê‚ú™‚ïêüïí‚ïê‚ú™‚ïê‚ïó
          ‡¶∏‡¶Æ‡ßü: ${time}
       ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
üóìÔ∏è English: ${englishDate}
üóìÔ∏è ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ: ${bangla.weekday}, ${bangla.day} ${bangla.month}, ${bangla.year} ‡¶¨‡¶ô‡ßç‡¶ó‡¶æ‡¶¨‡ßç‡¶¶
üåô ‡¶π‡¶ø‡¶ú‡¶∞‡¶ø: ${hijri.day} ${hijri.month} ${hijri.year} ‡¶π‡¶ø‡¶ú‡¶∞‡¶ø
üåç ‡¶ü‡¶æ‡¶á‡¶Æ‡¶ú‡ßã‡¶®: ${timeZone}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ú® ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶®‡¶ø‡¶ï‡¶ü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶¨‡ßá‡¶∂‡¶ø ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®..! 
üôè ‡ß´ ‡¶ì‡ßü‡¶æ‡¶ï‡ßç‡¶§ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶®‡¶ø‡ßü‡¶Æ‡¶ø‡¶§ ‡¶™‡ßú‡ßÅ‡¶®..!
ü§ù ‡¶∏‡¶ï‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶¶‡ßç‡¶≠‡¶æ‡¶¨ ‡¶¨‡¶ú‡¶æ‡ßü ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®..!
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üå∏‚ú®üåôüïäÔ∏èüåºüåøüïåüíñüåôüå∏‚ú®üå∫
‚ïî‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïó
üëë ùêÅùê®ùê≠ ùêéùê∞ùêßùêûùê´: ùêíùêöùê¢ùê´ùêÆùê• ùêàùê¨ùê•ùêöùê¶  
‚ïö‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ùñ‚ïê‚ïù
`;

  api.sendMessage(msg, threadID);
}

// ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶ö‡¶æ‡¶≤‡ßÅ
module.exports.run = async function ({ api, event }) {
  const threadID = event.threadID;
  if (runningGroups.has(threadID))
    return api.sendMessage("‚è∞ AutoTime ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ö‡¶≤‡¶õ‡ßá!", threadID);

  runningGroups.add(threadID);
  api.sendMessage("‚úÖ AutoTime ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ò‡¶®‡ßç‡¶ü‡¶æ‡ßü ‡¶∏‡¶Æ‡ßü ‡¶ì ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶¨‡ßá‡•§", threadID);

  const now = moment().tz("Asia/Dhaka");
  const nextHour = now.clone().add(1, "hour").startOf("hour");
  const delay = nextHour.diff(now);

  setTimeout(function tick() {
    if (!runningGroups.has(threadID)) return;
    sendTime(api, threadID);
    setInterval(() => {
      if (runningGroups.has(threadID)) sendTime(api, threadID);
    }, 60 * 60 * 1000);
  }, delay);
};

// ‡¶Ö‡¶ü‡ßã ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
module.exports.handleEvent = async function ({ api, event }) {
  const threadID = event.threadID;
  if (!runningGroups.has(threadID)) {
    runningGroups.add(threadID);
    const now = moment().tz("Asia/Dhaka");
    const nextHour = now.clone().add(1, "hour").startOf("hour");
    const delay = nextHour.diff(now);
    setTimeout(function tick() {
      if (!runningGroups.has(threadID)) return;
      sendTime(api, threadID);
      setInterval(() => {
        if (runningGroups.has(threadID)) sendTime(api, threadID);
      }, 60 * 60 * 1000);
    }, delay);
  }
};
