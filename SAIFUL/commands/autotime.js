const axios = require("axios");
const moment = require("moment-timezone");
require("moment/locale/bn");

module.exports.config = {
  name: "autotime",
  version: "1.4.0",
  hasPermssion: 0,
  credits: "Sairul Islam",
  description: "Auto time hourly update (Bangla, English & Hijri, Default ON)",
  commandCategory: "Utility",
  cooldowns: 5,
};

const banglaMonths = [
  "ржмрзИрж╢рж╛ржЦ", "ржЬрзНржпрзИрж╖рзНржа", "ржЖрж╖рж╛ржврж╝", "рж╢рзНрж░рж╛ржмржг", "ржнрж╛ржжрзНрж░", "ржЖрж╢рзНржмрж┐ржи",
  "ржХрж╛рж░рзНрждрж┐ржХ", "ржЕржЧрзНрж░рж╣рж╛ржпрж╝ржг", "ржкрзМрж╖", "ржорж╛ржШ", "ржлрж╛рж▓рзНржЧрзБржи", "ржЪрзИрждрзНрж░"
];

const banglaDays = [
  "рж░ржмрж┐ржмрж╛рж░", "рж╕рзЛржоржмрж╛рж░", "ржоржЩрзНржЧрж▓ржмрж╛рж░", "ржмрзБржзржмрж╛рж░",
  "ржмрзГрж╣рж╕рзНржкрждрж┐ржмрж╛рж░", "рж╢рзБржХрзНрж░ржмрж╛рж░", "рж╢ржирж┐ржмрж╛рж░"
];

// ==================== AutoTime Function ====================
async function sendTimeUpdate(api, threadID) {
  try {
    const now = moment().tz("Asia/Dhaka");

    const engDate = now.format("dddd, DD MMMM YYYY");
    const engTime = now.format("hh:mm A");

    const bnDayName = banglaDays[now.day()];
    const bnDate = now.date();
    const bnMonth = banglaMonths[now.month()];
    const bnYear = now.year() - 593;
    const bnTime = now.locale("bn").format("hh A");

    const hour = now.hour();
    let bnTimePeriod;
    if (hour >= 4 && hour < 12) bnTimePeriod = "рж╕ржХрж╛рж▓";
    else if (hour >= 12 && hour < 17) bnTimePeriod = "ржжрзБржкрзБрж░";
    else if (hour >= 17 && hour < 20) bnTimePeriod = "ржмрж┐ржХрж╛рж▓";
    else bnTimePeriod = "рж░рж╛ржд";

    const today = now.format("DD-MM-YYYY");
    let hijriDay, hijriMonth, hijriYear;
    try {
      const res = await axios.get(`http://api.aladhan.com/v1/gToH?date=${today}`);
      if (res.data?.data?.hijri) {
        const hijri = res.data.data.hijri;
        hijriDay = hijri.day;
        hijriMonth = hijri.month.ar;
        hijriYear = hijri.year;
      } else {
        hijriDay = hijriMonth = hijriYear = "N/A";
      }
    } catch (err) {
      hijriDay = hijriMonth = hijriYear = "Error";
      console.error("Hijri API Error:", err.message);
    }

    const message = `
тХФтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтХЧ
 тП░ ЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ & ЁЭЧЧЁЭЧФЁЭЧзЁЭЧШ тП░
тХЪтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтЭЦтХРтХЭ
       тХФтХРтЬктХРЁЯХТтХРтЬктХРтХЧ
          рж╕ржорзЯ: ${bnTimePeriod} ${bnTime} ржЯрж╛
       тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХЭ
ЁЯЧУя╕П English: ${engDate}
ЁЯЧУя╕П ржмрж╛ржВрж▓рж╛: ${bnDayName}, ${bnDate} ${bnMonth}, ${bnYear} ржмржЩрзНржЧрж╛ржмрзНржж
ЁЯМЩ рж╣рж┐ржЬрж░рж┐: ${hijriDay} ${hijriMonth} ${hijriYear} рж╣рж┐ржЬрж░рж┐
ЁЯМН ржЯрж╛ржЗржоржЬрзЛржи: Asia/Dhaka 
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
тЬи ржЖрж▓рзНрж▓рж╛рж╣рж░ ржирж┐ржХржЯрзЗ ржмрзЗрж╢рж┐ ржмрзЗрж╢рж┐ ржжрзЛржпрж╝рж╛ ржХрж░рзБржи..! 
ЁЯЩП рзл ржУрзЯрж╛ржХрзНржд ржирж╛ржорж╛ржЬ ржирж┐рзЯржорж┐ржд ржкрзЬрзБржи..!
ЁЯдЭ рж╕ржХрж▓рзЗрж░ рж╕рж╛ржерзЗ рж╕ржжрзНржнрж╛ржм ржмржЬрж╛рзЯ рж░рж╛ржЦрзБржи..!
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
ЁЯМ╕тЬиЁЯМЩЁЯХКя╕ПЁЯМ╝ЁЯМ┐ЁЯХМЁЯТЦЁЯМЩЁЯМ╕тЬиЁЯМ║

ЁЯМЯ ЁЭРВЁЭРлЁЭРЮЁЭРЪЁЭРнЁЭРиЁЭРл тФБ ЁЭРТЁЭРЪЁЭРвЁЭРлЁЭРоЁЭРе ЁЭРИЁЭРмЁЭРеЁЭРЪЁЭРж ЁЯМЯ`;

    api.sendMessage(message.trim(), threadID);

  } catch (err) {
    console.error("AutoTime Error:", err);
  }
}

// ==================== Default Auto Start ====================
module.exports.onLoad = function ({ api }) {
  console.log("тЬЕ AutoTime system loaded and will run hourly by default!");

  if (global.data.allThreadIDs) {
    global.data.allThreadIDs.forEach(threadID => {
      const now = moment().tz("Asia/Dhaka");
      const nextHour = moment(now).add(1, "hour").startOf("hour");
      const msUntilNextHour = nextHour.diff(now);

      setTimeout(() => {
        sendTimeUpdate(api, threadID);
        setInterval(() => sendTimeUpdate(api, threadID), 60 * 60 * 1000);
      }, msUntilNextHour);
    });
  }
};

// ==================== Command Handler ====================
module.exports.run = async function ({ api, event }) {
  return api.sendMessage(
    "ЁЯХТ ЁЭЧФЁЭШВЁЭШБЁЭЧ╝ЁЭЧзЁЭЧ╢ЁЭЧ║ЁЭЧ▓ рж╕рж┐рж╕рзНржЯрзЗржо ржбрж┐ржлрж▓рзНржЯржнрж╛ржмрзЗ ржЕржи ржЖржЫрзЗ!\nржкрзНрж░рждрж┐ ржШржирзНржЯрж╛ржпрж╝ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╕ржоржпрж╝ ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗ тП░",
    event.threadID,
    event.messageID
  );
};
